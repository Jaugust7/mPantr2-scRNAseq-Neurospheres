result_40_patterns
result_40_patterns$mse
result_40_patterns$mkl
result_40_patterns$target.loss
result_40_patterns$call
result_40_patterns$options
pmat<-pData(dat)[,c("clone", "genotype", "sex", "batch", "cell_cyc")]
pmat<-pData(dat)[,c("clone", "genotype", "sex", "batch", "cell_cyc")]
for (a in unique(pmat$clone)){
pmat[,paste("clone_",a,sep="")]<-as.numeric(factor(pmat$clone)==a)
}
for (a in unique(pmat$genotype)){
pmat[,a]<-as.numeric(factor(pmat$genotype)==a)
}
for (a in unique(pmat$sex)){
pmat[,a]<-as.numeric(factor(pmat$sex)==a)
}
for (a in unique(pmat$batch)){
pmat[,a]<-as.numeric(factor(pmat$batch)==a)
}
for (a in unique(pmat$cell_cyc)){
pmat[,a]<-as.numeric(factor(pmat$cell_cyc)==a)
}
pmat<-as.matrix(pmat[,c(-1:-5)])
corrplot
install.packages("corrplot")
library(corrplot)
cormat<-cor(x=t(result_80_patterns$H), y=pmat, method="pearson")
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
corrplot(cormat)
pmat<-pData(dat)[,c("clone", "genotype", "sex", "batch")]
for (a in unique(pmat$clone)){
pmat[,paste("clone_",a,sep="")]<-as.numeric(factor(pmat$clone)==a)
}
for (a in unique(pmat$genotype)){
pmat[,a]<-as.numeric(factor(pmat$genotype)==a)
}
for (a in unique(pmat$sex)){
pmat[,a]<-as.numeric(factor(pmat$sex)==a)
}
for (a in unique(pmat$batch)){
pmat[,a]<-as.numeric(factor(pmat$batch)==a)
}
pmat
pmat<-pData(dat)[,c("clone", "genotype", "sex", "batch", "cell_cyc")]
for (a in unique(pmat$clone)){
pmat[,paste("clone_",a,sep="")]<-as.numeric(factor(pmat$clone)==a)
}
for (a in unique(pmat$genotype)){
pmat[,a]<-as.numeric(factor(pmat$genotype)==a)
}
for (a in unique(pmat$sex)){
pmat[,a]<-as.numeric(factor(pmat$sex)==a)
}
for (a in unique(pmat$batch)){
pmat[,a]<-as.numeric(factor(pmat$batch)==a)
}
for (a in unique(pmat$cell_cyc)){
pmat[,a]<-as.numeric(factor(pmat$cell_cyc)==a)
}
pmat
pmat<-pData(dat)[,c("clone", "genotype", "sex", "batch", "cell_cyc")]
for (a in unique(pmat$clone)){
pmat[,paste("clone_",a,sep="")]<-as.numeric(factor(pmat$clone)==a)
}
for (a in unique(pmat$genotype)){
pmat[,a]<-as.numeric(factor(pmat$genotype)==a)
}
for (a in unique(pmat$sex)){
pmat[,a]<-as.numeric(factor(pmat$sex)==a)
}
for (a in unique(pmat$batch)){
pmat[,a]<-as.numeric(factor(pmat$batch)==a)
}
pmat<-as.matrix(pmat[,c(-1:-4)])
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
corrplot(cormat)
pmat<-pData(dat)[,c("clone", "genotype", "sex", "batch")]
for (a in unique(pmat$clone)){
pmat[,paste("clone_",a,sep="")]<-as.numeric(factor(pmat$clone)==a)
}
for (a in unique(pmat$genotype)){
pmat[,a]<-as.numeric(factor(pmat$genotype)==a)
}
for (a in unique(pmat$sex)){
pmat[,a]<-as.numeric(factor(pmat$sex)==a)
}
for (a in unique(pmat$batch)){
pmat[,a]<-as.numeric(factor(pmat$batch)==a)
}
pmat<-as.matrix(pmat[,c(-1:-4)])
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
corrplot(cormat)
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
corrplot(cormat, )
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_10_patterns.RData")
pdf("../Plots/10_patterns.pdf", width = 100, height = 100)
plotPatterns(dat, result_10_patterns, nPatterns = c(1:20))
dev.off()
plotPatterns(dat, result_10_patterns, nPatterns = c(1:20))
pdf("../Plots/20_patterns.pdf", width = 100, height = 100)
plotPatterns(dat, result_20_patterns, nPatterns = c(1:20))
dev.off()
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
pdf("../Plots/10_patterns.pdf", width = 100, height = 100)
plotPatterns(dat, result_10_patterns, nPatterns = c(1:10))
dev.off()
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
corrplot(cormat, )
corrplot(cormat, order = "hclust" )
corrplot(cormat, order = "AOE" )
corrplot(cormat, order = "AOE" )
str(dat)
reducedDim()
reducedDim
reducedDims
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
corrplot(cormat,  )
cormat<-cor.mtest(x=t(result_10_patterns$H), y=pmat, method="pearson", conf.level=0.95)
cormat<-cor.mtest(mat=t(result_10_patterns$H), y=pmat, method="pearson", conf.level=0.95)
cormat<-cor.mtest(mat=t(result_10_patterns$H), pmat=pmat, method="pearson", conf.level=0.95)
corrplot(cormat)
cormat<-cor.mtest(mat=t(result_10_patterns$H), pmat=pmat, method="pearson", conf.level=0.95)
corrplot(cormat)
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_10_patterns$H), pmat=pmat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, sig.level = 2)
corrplot(cormat, p.mat = cormat_test$p, sig.level = .2)
corrplot(cormat, p.mat = cormat_test$p, sig.level = .05)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value")
cormat_test<-cor.mtest(mat=t(result_10_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value")
cormat_test<-cor.mtest(mat=t(result_10_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value")
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.05)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.2)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.2)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.5)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.005)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0)
cormat_test$p
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = -1)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.00005)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.0000000000000005)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = 0.05)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level = >0.05)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =<0.05)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_20_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_20_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_10_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
pdf("../Plots/10_patterns_corr.pdf", height =10, width=10)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
dev.off()
pdf("../Plots/10_patterns_corr.pdf", height =5, width=5)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
dev.off()
pdf("../Plots/10_patterns_corr.pdf", height =7, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
dev.off()
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
pdf("../Plots/10_patterns_corr.pdf", height =7, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05)
dev.off()
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black", method = "color")
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black", method = "color", type="upper")
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black", method = "color")
?cor.mtest
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
pdf("../Plots/10_patterns_corr.pdf", height =7, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
dev.off()
result_10_patterns
result_10_patterns$W
result_10_patterns$H
result_10_patterns$W
patternGenes<-function(eset, decomp, num_genes){
colnames(decomp$W)<-1:length(decomp$W[1,]) #I'll remove this line later if need be
lapply(c(1:length(colnames(decomp$W))), function(x){
data.frame("gene_name" = lookupGeneName(eset, names(sort(decomp$W[,x], decreasing =TRUE)[1:num_genes])), "gene_weight" = sort(decomp$W[,x], decreasing = TRUE)[1:num_genes])})
}
patternGenes(dat, result_10_patterns, 25)
patternGenes(dat, result_20_patterns, 25)
?align_cds
reduce_dimension
cormat<-cor(x=t(result_40_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_40_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
pmat
cormat_test$p
cormat_test<-cor.mtest(mat=t(result_40_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
cormat_test
cormat_test
cormat_test
cormat_test$lowCI
cormat<-cor(x=t(result_40_patterns$H), y=pmat, method="pearson")
cormat
cormat_test<-cor.mtest(mat=cormat, pmat=pmat, method="pearson", conf.level=0.99)
cormat_test<-cor.mtest(mat=cormat, pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
pdf("../Plots/10_patterns_corr.pdf", height =15, width=7)
dev.off()
pdf("../Plots/40_patterns_corr.pdf", height =15, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
dev.off()
patternGenes(dat,result_40_patterns,25)[24]
patternGenes(dat,result_40_patterns,25)[27]
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=cormat, pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
pdf("../Plots/20_patterns_corr.pdf", height =10, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
dev.off()
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
patternGenes(dat,result_20_patterns,25)[12]
cormat<-cor(x=t(result_40_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=cormat, pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_80_patterns.RData")
cormat<-cor(x=t(result_80_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=cormat, pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
pdf("../Plots/80_patterns_corr.pdf", height =25, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
dev.off()
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_100_patterns.RData")
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=cormat, pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
pdf("../Plots/100_patterns_corr.pdf", height =25, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
dev.off()
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), pmat=pmat, method="pearson", conf.level=0.99)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
cormat_test
cormat_test$p
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
cormat
cormat_test
corrplot(cormat, pmat = cormat_test$p, sig.level =0.05, tl.col = "black")
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), pmat=pmat, method="pearson", conf.level=0.95)
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), pmat=pmat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
?cor
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="spearman")
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), pmat=pmat, method="spearman", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), pmat=pmat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test, sig.level =0.05, tl.col = "black")
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
cormat<-cor(x=result_100_patterns$H, y=pmat, method="pearson")
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="pearson")
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), p.mat=pmat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
?cor.mtest
cormat_test<-cor.mtest(x=t(result_100_patterns$H), y=pmat, method="pearson", conf.level=0.95)
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), y=pmat, method="pearson", conf.level=0.95)
?cor.mtest
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), data=pmat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, sig.level =0.05, tl.col = "black")
cormat_test<-cor.test(x=t(result_100_patterns$H), y=pmat, method="pearson", conf.level=0.95)
pmat
t(result_100_patterns$H)
pmat
cormat$r
cormat
?cor
?cor.mtest
corrplot(cormat, p.mat = cormat_test$p, tl.col = "black")
cormat
cormat_test<-cor.test(x=cormat, method="pearson", conf.level=0.95)
cormat_test<-cor.mtest(x=cormat, method="pearson", conf.level=0.95)
cormat_test<-cor.mtest(mat=cormat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, tl.col = "black")
cormat_test
cormat_test<-cor.mtest(mat=t(cormat), method="pearson", conf.level=0.95)
cormat_test
corrplot(cormat, p.mat = cormat_test$p, tl.col = "black")
cormat_test<-cor.mtest(mat=cormat, method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, tl.col = "black")
cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, p.mat = cormat_test$p, tl.col = "black")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
pdf("../Plots/100_patterns_corr.pdf", height =25, width=7)
corrplot(cormat, p.mat = cormat_test$p, insig = "p-value", sig.level =0.05, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/10_patterns_corr.pdf", height =7, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
pdf("../Plots/100_patterns_corr.pdf", height =7, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/20_patterns_corr.pdf", height =7, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/20_patterns_corr.pdf", height =10, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/20_patterns_corr.pdf", height =14, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_40_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/20_patterns_corr.pdf", height =28, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/20_patterns_corr.pdf", height =50, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/40_patterns_corr.pdf", height =50, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/20_patterns_corr.pdf", height =14, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/20_patterns_corr.pdf", height =14, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/20_patterns_corr.pdf", height =14, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_40_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/40_patterns_corr.pdf", height =28, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/40_patterns_corr.pdf", height =25, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/40_patterns_corr.pdf", height =22, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/40_patterns_corr.pdf", height =23, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_80_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/80_patterns_corr.pdf", height =50, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/80_patterns_corr.pdf", height =45, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="pearson", )
cormat<-cor(x=t(result_100_patterns$H), y=pmat, method="pearson", )
pdf("../Plots/100_patterns_corr.pdf", height =60, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
pdf("../Plots/100_patterns_corr.pdf", height =55, width=7)
corrplot(cormat, tl.col = "black")
dev.off()
patternGenes(dat, result_100_patterns, 25)[68]
cormat<-cor(x=t(result_100_patterns$H), method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
cormat<-cor(x=t(result_10_patterns$H), method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
patternGenes(dat, result_10_patterns, 25)[7]
patternGenes(dat, result_10_patterns, 25)[6]
patternGenes(dat, result_10_patterns, 25)[9]
patternGenes(dat, result_10_patterns, 25)[1]
cormat<-cor(x=t(result_20_patterns$H), method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
cormat<-cor(x=t(result_40_patterns$H), method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
cormat<-cor(x=t(result_80_patterns$H), method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
cormat<-cor(x=t(result_100_patterns$H), method="pearson", )
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
patternGenes(dat, result_10_patterns, 50)
do.call(cbind,patternGenes(dat, result_10_patterns, 50))
do.call(cbind,patternGenes(dat, result_10_patterns, 50)[,])
do.call(cbind,patternGenes(dat, result_10_patterns, 50)[,1])
do.call(cbind,patternGenes(dat, result_10_patterns, 50))
do.call(cbind,patternGenes(dat, result_100_patterns, 50))
?monocle3:::normalize_expr_data
monocle3:::normalize_expr_data(cds=dat,norm_method = "Aligned",pseudo_count = 1)
str(dat)
dat@int_colData$reducedDims$Aligned
dat@int_colData$reducedDims$UMAP
align_cds
reducedDims(dat)[["Aligned"]]
align_cds
library(sva )
BiocManager::install("sva")
pData(dat)
?sva::ComBat_seq
#use combat-seq to remove batch effect and preserve biological info
batch<-pData(dat)$batch
group<-pData(dat)$genotype
sva::ComBat_seq(exprs_matrix, batch = batch, group = group)
#use combat-seq to remove batch effect and preserve biological info
batch<-pData(dat)$clone
group<-pData(dat)$genotype
?sva::ComBat
?str_sub
adjusted.m <- ComBat(log2(exprs_matrix + 1 ), batch = str_sub(pData(dat)$clone, 3, 3),
mod = model.matrix(~as.factor(genotype), data=data.frame(type = pData(dat)$genotype)),
BPPARAM = SerialParam())
#use combat-seq to remove batch effect and preserve biological info
adjusted.m <- sva::ComBat(log2(exprs_matrix + 1 ), batch = str_sub(pData(dat)$clone, 3, 3),
mod = model.matrix(~as.factor(genotype), data=data.frame(type = pData(dat)$genotype)),
BPPARAM = SerialParam())
pData(dat)$genotype
as.factor(genotype)
model.matrix(~as.factor(genotype), data=data.frame(type = pData(dat)$genotype))
?model.matrix
as.factor(genotype)
str_sub(pData(dat)$clone, 3, 3)
table(str_sub(pData(dat)$clone, 3, 3))
data.frame(type = pData(dat)$genotype)
head(data.frame(type = pData(dat)$genotype))
#use combat-seq to remove batch effect and preserve biological info
adjusted.m <- sva::ComBat(log2(exprs_matrix + 1 ), batch = str_sub(pData(dat)$clone, 3, 3),
mod = model.matrix(~as.factor(type), data=data.frame(type = pData(dat)$genotype)),
BPPARAM = SerialParam())
??SerialParam
#use combat-seq to remove batch effect and preserve biological info
adjusted.m <- sva::ComBat(log2(exprs_matrix + 1 ), batch = str_sub(pData(dat)$clone, 3, 3),
mod = model.matrix(~as.factor(type), data=data.frame(type = pData(dat)$genotype)),
BPPARAM = BiocParallel::SerialParam())
adjusted.m <- (2 ^ adjusted.m) - 1
adjusted.m[adjusted.m < 0] <- 0
adjusted.m[adjusted.m > max(total.m)] <- max(total.m)
adjusted.m[adjusted.m > max(exprs_matrix)] <- max(exprs_matrix)
#export expression matrix for use with NNLM::nnmf()
write.table(as.matrix(adjusted,m), file = "../Assets/exprs_matrix.mtx", col.names = TRUE, row.names = TRUE)
#export expression matrix for use with NNLM::nnmf()
write.table(as.matrix(adjusted.m), file = "../Assets/exprs_matrix.mtx", col.names = TRUE, row.names = TRUE)
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_10_patterns.RData")
cormat<-cor(x=t(result_10_patterns$H), method="pearson", )
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
library(monocle3)
library(tidyverse)
library(knitr)
library(magrittr)
library(data.table)
library(broom)
library(clusterProfiler)
library(org.Mm.eg.db)
library(ggcorrplot)
library(msigdbr)
library(Revelio)
library(NNLM)
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot(cormat, tl.col = "black")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot::corrplot(cormat, tl.col = "black")
patternGenes(dat, result_10_patterns, num_genes = 25)[6]
patternGenes(dat, result_10_patterns, num_genes = 25)[9]
patternGenes(dat, result_10_patterns, num_genes = 25)[8]
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_20_patterns.RData")
cormat<-cor(x=t(result_20_patterns$H), y=pmat, method="pearson")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot::corrplot(cormat, tl.col = "black")
patternGenes(dat, result_20_patterns, num_genes = 25)[16]
patternGenes(dat, result_20_patterns, num_genes = 50)[16]
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_30_patterns.RData")
cormat<-cor(x=t(result_30_patterns$H), y=pmat, method="pearson")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot::corrplot(cormat, tl.col = "black")
patternGenes(dat, result_30_patterns, num_genes = 50)[12]
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_40_patterns.RData")
cormat<-cor(x=t(result_40_patterns$H), y=pmat, method="pearson")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot::corrplot(cormat, tl.col = "black")
patternGenes(dat, result_40_patterns, num_genes = 50)[25]
adjusted.m <- sva::ComBat(log2(exprs_matrix + 1), batch = str_sub(pData(dat)$batch, 3, 3),
mod = model.matrix(~as.factor(type), data=data.frame(type = pData(dat)$genotype)),
BPPARAM = BiocParallel::SerialParam())
adjusted.m <- (2 ^ adjusted.m) - 1
adjusted.m[adjusted.m < 0] <- 0
adjusted.m[adjusted.m > max(exprs_matrix)] <- max(exprs_matrix)
str_sub(pData(dat)$batch, 3, 3)
str_sub(pData(dat)$batch, 3, 3)
str_sub(pData(dat)$batch)
str_sub(pData(dat)$batch7,7)
str_sub(pData(dat)$batch, 7,7)
#use combat-seq to remove batch effect and preserve biological info
adjusted.m <- sva::ComBat(log2(exprs_matrix + 1), batch = str_sub(pData(dat)$batch, 7, 7),
mod = model.matrix(~as.factor(type), data=data.frame(type = pData(dat)$genotype)),
BPPARAM = BiocParallel::SerialParam())
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_10_patterns.RData")
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot::corrplot(cormat, tl.col = "black")
load("../NMF/outs/mPantr2_scRNAseq_neurospheres_result_10_patterns.RData")
cormat<-cor(x=t(result_10_patterns$H), y=pmat, method="pearson")
#cormat_test<-cor.mtest(mat=t(result_100_patterns$H), method="pearson", conf.level=0.95)
corrplot::corrplot(cormat, tl.col = "black")
